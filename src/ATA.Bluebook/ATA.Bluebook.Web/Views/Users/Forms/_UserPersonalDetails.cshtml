@model UserFormPageModel
@{
	var stepperButton = new StepperButtonModel
    {
        PreviousLabel = "Previous",
        NextLabel = "Next",
        PreviousBtnClickHandler = "handlePrevious",
        NextBtnClickHandler = "handleNext"
    };
}
<div>
	@(
		Html.DevExtreme()
			.Form<UserPersonalDetailForm>()
			.OnInitialized("onPersonalDetailFormInitialized")
			.ColCount(2)
			.FormData(Model.PersonalDetailForm)
			.Items(item =>
			{
				item.AddCustomFormTextBox(x => x.Name);
				item.AddCustomFormTextArea(x => x.Address);
				item.AddCustomFormTextBox(x => x.City);
				item.AddCustomFormTextBox(x => x.Zip);
				item.AddCustomFormTextBox(x => x.State);
				item.AddCustomFormTextBox(x => x.Contact);
				item.AddCustomFormTextBox(x => x.Email);
				if(Model.UserTypeForm.UserType == UserType.Client) {		
					item.AddCustomFormTextBox(x => x.ClosedCode);
					item.AddCustomFormTextBox(x => x.CloseDays);
					item.AddCustomFormTextBox(x => x.WhiteMailCode);
				}
			})
)
</div>
<div>
    @(await Html.PartialAsync("_StepperButtons", stepperButton))
</div>
<script>
	let personalDetailForm
	function onPersonalDetailFormInitialized(e) {
		personalDetailForm = e.component;
	}
    function handlePrevious() {
        stepper.previous();
    }

    function handleNext() {
		const validationStatus = personalDetailForm.validate();
		if(validationStatus.isValid) {

		}
        stepper.next()
    }
</script>
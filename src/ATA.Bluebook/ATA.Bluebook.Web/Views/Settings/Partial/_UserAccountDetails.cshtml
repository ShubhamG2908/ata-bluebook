@model UserAccountDetailVM

<div>
	@{
		TagControlConfig tagConfig = new()
			{
				DbSourceController = "Settings",
				DBSourceAction = "GetClientList",
				KeyField = "Id",
				DisplayField = "Name",
				ValueChangeCallBack = "ClientSelectionChanged"
			};
	}
	@(
		Html.DevExtreme()
		.Form<UserAccountDetailFormVM>()
		.OnInitialized("onInitialized")
		.ColCount(2)
		.FormData(Model.form)
		.Items(item =>
		{
			item.AddCustomFormTextBox(x => x.Email);
			item.AddCustomFormTextBox(x => x.UserName);
			item.AddCustomFormPassword(x => x.Password);
			item.AddCustomFormTextBox(x => x.FullName);
			if (Model.UserType == 1)        // User Type = Client
			{
				item.AddCustomFormTextBox(x => x.ClientId);
			}
			if (Model.UserType == 2)        // User Type = Agency
			{
				item.AddCustomFormTextBox(x => x.AgencyId);
				item.AddCustomFormTagBox(m => m.ClientList, tagConfig);
			}
		})
		)
</div>

<script>
	let formInstance;

	function onInitialized(e) {
		formInstance = e.component;
	}

	// Temperory put this code here. make centrolize this code after finalize all things.
	function changePasswordMode(name, iconId) {
		let editor = formInstance.getEditor(name);

		if (!editor)
			return;

		editor.option('mode', editor.option('mode') === 'text' ? 'password' : 'text');

		let iconElement = $(`#${iconId}`).find("i");

		if (!iconElement)
			return;

		iconElement.toggleClass("dx-icon-eyeopen");
		iconElement.toggleClass("dx-icon-eyeclose")
	}

	function ClientSelectionChanged(e) {
	}
</script>

@{
	ViewData["Title"] = "Home Page";

	List<DxDataGridColumnConfig> columnConfigs = new() {
		new(){ Field = "Username", DataType= GridColumnDataType.String},
		new(){ Field = "Password", DataType= GridColumnDataType.String},
		new(){ Field = "Email", DataType= GridColumnDataType.String},
		new(){ Field = "UserType", DataType= GridColumnDataType.String}
	};

	DxDataGridConfig<UserModel> gridConfig = new()
			{
				Id = "dxc_users",
				DataSourceConfig = new()
				{
					ControllerName = "DxUser",
					LoadActionName = "Get",
					Key = "Id"
				},
				DisplayRowFilters = true,
				ShowGroupPanel = true,
				GridEditingConfig = new()
				{
					PopupTitle = "User",
					EnableGridEdit = true,
					InsertActionName = "Create",
					PopupHeight = 350,
					PopupWidth = 800,
					ContentTemplateName = "create-user-form-template"
				}
			};
}

<div>
	@(Html.AddCustomDxDataGrid<UserModel>(columnConfigs, gridConfig))

	@using (Html.DevExtreme().NamedTemplate("create-user-form-template"))
	{
		<div class="p-3">
			@(
					Html.DevExtreme().Form<UserModel>()
					.Items(items =>
					{
						items.AddCustomFormTextBox(x => x.Username);
						items.AddCustomFormTextBox(x => x.Password);
					})
					)
		</div>
	}
</div>

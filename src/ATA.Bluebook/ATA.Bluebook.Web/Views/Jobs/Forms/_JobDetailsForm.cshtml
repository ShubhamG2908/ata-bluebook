@model JobFormPageModel
@{
	var stepperButtonModel = new StepperButtonModel
			{
				PreviousLabel = "Previous",
				NextLabel = "Next",
				PreviousBtnClickHandler = "handleJobDetailsPrevious",
				NextBtnClickHandler = "handleJobDetailsNext",
				DisplayPreviousButton = false
			};

	SelectionControlConfig JobTypeConfig = new SelectionControlConfig()
			{
				DbSourceController = "Jobs",
				DBSourceAction = "GetJobTypes",
				KeyField = "Id",
				DisplayField = "Name"
			};

	SelectionControlConfig PackageSizeConfig = new SelectionControlConfig()
			{
				DbSourceController = "Jobs",
				DBSourceAction = "GetPackageSizes",
				KeyField = "Id",
				DisplayField = "Name"
			};

	SelectionControlConfig IssueSelectionConfig = new SelectionControlConfig()
			{
				DbSourceController = "Jobs",
				DBSourceAction = "GetIssues",
				KeyField = "Id",
				DisplayField = "Name"
			};

	SelectionControlConfig CopyWriterSelectionConfig = new SelectionControlConfig()
			{
				DbSourceController = "Jobs",
				DBSourceAction = "GetCopywriter",
				KeyField = "Id",
				DisplayField = "Name"
			};

	SelectionControlConfig CoordinatorSelectionConfig = new SelectionControlConfig()
			{
				DbSourceController = "Jobs",
				DBSourceAction = "GetCoordinator",
				KeyField = "Id",
				DisplayField = "Name"
			};
}

<div>
	<div class="mt-3">
		@(
				Html.DevExtreme()
				.Form<JobDetailsForm>()
				.OnInitialized("onJobDetailsFormInitialized")
				.FormData(Model.JobDetailsForm)	
				.Items(item =>
				{
					item.AddGroup()
					.Caption("Job Details")
					.ColCount(3)
					.Items(groupItem =>
					{
						groupItem.AddCustomFormTextBox(m => m.JobId);
						groupItem.AddCustomFormTextBox(m => m.JobName);
						groupItem.AddCustomFormSelectBox(m => m.JobType, JobTypeConfig);
					});
					item.AddGroup()
					.Caption("Projections")
					.ColCount(3)
					.Items(groupItem =>
					{
						groupItem.AddCustomFormDateBox(m => m.FirstMailDate);
						groupItem.AddCustomFormDateBox(m => m.EndMailDate);
						groupItem.AddCustomFormTextBox(m => m.EstimatedQty);
						groupItem.AddCustomFormTextBox(m => m.EstIncPerPiece);
						groupItem.AddCustomFormTextBox(m => m.EstCostPerPiece);
					});
					item.AddGroup()
					.Caption("Information")
					.ColCount(3)
					.Items(groupItem =>
					{
						groupItem.AddCustomFormSelectBox(m => m.Issue, IssueSelectionConfig);
						groupItem.AddCustomFormTextBox(m => m.Technique);
						groupItem.AddCustomFormSelectBox(m => m.Copywriter, CopyWriterSelectionConfig);
						groupItem.AddCustomFormSelectBox(m => m.Coordinator, CoordinatorSelectionConfig);
						groupItem.AddCustomFormSelectBox(m => m.PackageSize, PackageSizeConfig);
						groupItem.AddCustomFormTextBox(m => m.Status);
					});
					item.AddGroup()
					.Caption("Coding")
					.ColCount(3)
					.Items(groupItem =>
					{
						groupItem.AddCustomFormTextBox(m => m.PackageCode);
						groupItem.AddCustomFormTextBox(m => m.Agency);
						groupItem.AddCustomFormTextBox(m => m.CostComplete);
						groupItem.AddCustomFormTextBox(m => m.CostEstimateOk);
						groupItem.AddGroup().ColCount(2).Items(innerGroupItem =>
					{
						innerGroupItem.AddCustomFormCheckbox(m => m.DollarBills);
						innerGroupItem.AddCustomFormCheckbox(m => m.NoInvoice);
					});
						groupItem.AddCustomFormTextBox(m => m.FundCode);
					});
					item.AddCustomFormTextArea(m => m.JobDetails, new TextareaControlConfig());
					item.AddCustomFormTextArea(m => m.Instructions, new TextareaControlConfig());
				})
				)
	</div>
	<div>
		@if(!Model.IsEditMode) {
			@(await Html.PartialAsync("_StepperButtons", stepperButtonModel))
		}
	</div>
</div>